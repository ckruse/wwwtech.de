name: Build Release

on:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "14"
      - uses: erlef/setup-beam@v1
        with:
          otp-version: "24"
          elixir-version: "1.12"
      - name: install Dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          sudo apt-get install -y nodejs
          MIX_ENV=prod mix deps.get --only prod
      - name: create assets
        run: |
          mkdir -p priv/static
          cd assets
          MIX_ENV=prod npm install
          MIX_ENV=prod npm run deploy
          cd ..
      - name: compile
        run: |
          MIX_ENV=prod mix compile
          MIX_ENV=prod mix phx.digest
      - name: create release
        run: |
          MIX_ENV=prod mix release --path wwwtech-${{ steps.get_version.outputs.VERSION }}
          tar -czf wwwtech-${{ steps.get_version.outputs.VERSION }}.tgz wwwtech-${{ steps.get_version.outputs.VERSION }}
      - name: create github release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./wwwtech-${{ steps.get_version.outputs.VERSION }}.tgz
          asset_name: wwwtech-${{ steps.get_version.outputs.VERSION }}.tgz
          asset_content_type: application/gzip
