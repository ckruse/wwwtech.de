#!/usr/bin/env bash
APP="wwwtech"

# Configuration of where the releases would be built.
BUILD_HOST="web.defunced.de" # change to your server's IP address
BUILD_USER="ckruse"
BUILD_AT="/home/ckruse/.wwwtech/edeliver_builds"

# The location where built releases are going to be stored.
RELEASE_STORE=ckruse@web.defunced.de:/home/ckruse/.wwwtech/edeliver_release_store/

# Host and use of where the app would run.
PRODUCTION_HOSTS="web.defunced.de" # same host in our case.
PRODUCTION_USER="ckruse"

DELIVER_TO="/home/ckruse/www/"

pre_erlang_get_and_update_deps() {
 # copy it on the build host to the build directory when building
 local _secret_config_file_on_build_host="/home/ckruse/.wwwtech/prod.secret.exs"
 local _secret_smtp_config_file="/home/ckruse/.wwwtech/smtp.exs"

 status "Linking '$_secret_config_file_on_build_host' to build config dir"
 __sync_remote "
   ln -sfn '$_secret_config_file_on_build_host' '$BUILD_AT/config/prod.secret.exs'
   ln -sfn '$_secret_smtp_config_file' '$BUILD_AT/config/smtp.exs'
 "
}

pre_erlang_clean_compile() {
 status "Installing nodejs dependencies"
 __sync_remote "
   set -e
   cd '$BUILD_AT'

   APP='$APP' MIX_ENV='$TARGET_MIX_ENV' npm install
 "

 status "Building brunch assets"
 __sync_remote "
   set -e
   cd '$BUILD_AT'

   mkdir -p priv/static
   APP='$APP' MIX_ENV='$TARGET_MIX_ENV' npm run deploy
 "

 status "Compiling code"
 __sync_remote "
   set -e #
   cd '$BUILD_AT'

   APP='$APP' MIX_ENV='$TARGET_MIX_ENV' $MIX_CMD do deps.get, compile
 "

 status "Running phoenix.digest"
 __sync_remote "
   set -e #
   cd '$BUILD_AT'

   APP='$APP' MIX_ENV='$TARGET_MIX_ENV' $MIX_CMD phoenix.digest $SILENCE
 "
}